@inject ILocalStorageService localStorage

<select name="option" @onchange="HandleOptionChange">
    @foreach (var option in options)
    {
        <option value="@option.StationId" selected="@IsSelected(option.StationId)">@option.DisplayName</option>
    }
</select>

@code {
    [Parameter]
    public EventCallback<WeatherOption> OnSelectionChanged { get; set; }

    private string selectedOption = string.Empty; 
    private string selectedOptionName = string.Empty;

    private async Task GetStoredOption()
    {
        selectedOption = await localStorage.GetItemAsync<string>("selectedOption") ?? selectedOption;
        selectedOptionName = await localStorage.GetItemAsync<string>("selectedOptionName") ?? selectedOptionName;
    }

    private bool IsSelected(string stationId)
    {
      return stationId == selectedOption;
    }

    private List<WeatherOption> options = new List<WeatherOption>()
    {
        new WeatherOption("Ainaži", "RIAI99PA"),
        new WeatherOption("Alūksne", "RIAL99MS"),
        new WeatherOption("Bauska", "RIBA99PA"),
        new WeatherOption("Dagda", "RIDAGDA"),
        new WeatherOption("Daugavpils", "RIDM99MS"),
        new WeatherOption("Dobele", "RIDO99MS"),
        new WeatherOption("Gulbene", "RIGU99MS"),
        new WeatherOption("Jelgava", "RIJE99PA"),
        new WeatherOption("Kolka", "RIKO99PA"),
        new WeatherOption("Liepāja", "RILP99PA"),
        new WeatherOption("Madona", "RIMADONA"),
        new WeatherOption("Mērsrags", "RIME99MS"),
        new WeatherOption("Pāvilosta", "RIPA99PA"),
        new WeatherOption("Priekuļi", "RIPR99PA"),
        new WeatherOption("Rēzekne", "RIREZEKN"),
        new WeatherOption("Rīga", "RIGASLU"),
        new WeatherOption("Rucava", "RUCAVA"),
        new WeatherOption("Rūjiena", "RIRU99PA"),
        new WeatherOption("Saldus", "RISA99PA"),
        new WeatherOption("Skrīveri", "RISI99PA"),
        new WeatherOption("Skulte", "RISE99MS"),
        new WeatherOption("Stende", "RIST99PA"),
        new WeatherOption("Ventspils", "RIVE99PA"),
        new WeatherOption("Zīlāni", "RIZI99PA"),
        new WeatherOption("Zosēni", "RIZO99MS")
    };

    protected override async Task OnInitializedAsync()
    {
        await GetStoredOption();  
        await OnSelectionChanged.InvokeAsync(new WeatherOption(selectedOptionName, selectedOption));
    }

    private async Task HandleOptionChange(ChangeEventArgs e)
    {        
        var selectedValue = e.Value?.ToString();
        var selectedOption = options.FirstOrDefault(o => o.StationId == selectedValue);  
        
        if (selectedOption != null)
        {            
            await localStorage.SetItemAsync("selectedOption", selectedOption.StationId);
            await localStorage.SetItemAsync("selectedOptionName", selectedOption.DisplayName);
            await OnSelectionChanged.InvokeAsync(selectedOption);
        }
    }    
}
