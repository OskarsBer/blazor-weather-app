@using Newtonsoft.Json;
@inject HttpClient client

@code {
    public class Abbreviations
    {
        public const string TempAbbr = "TDRY";
        public const string HumidityAbbr = "RLH";
        public const string WindSpeedAbbr = "WNS10";
        public const string WindShearAbbr = "HWSMX";
        public const string PrecipitationAbbr = "HPRAB";
    }

    public async Task<(string temperature, string humidity, string windSpeed, string windShear, string precipitation, string uviIndex)> GetWeatherData(string stationId, string displayName)
    {       
        string currentHour = DateTime.Now.ToString("HH");
        string temperature = "Loading..";
        string humidity = "Loading..";
        string windSpeed = "Loading..";
        string windShear = "Loading..";
        string precipitation = "Loading..";
        string uviIndex = "Loading..";

        try
        {
            var escapedStationId = Uri.EscapeDataString(stationId);
            
            var response = await client.GetAsync($"https://data.gov.lv/dati/api/3/action/datastore_search?q={escapedStationId}&resource_id=17460efb-ae99-4d1d-8144-1068f184b05f");
            response.EnsureSuccessStatusCode();

            var responseUVI = await client.GetAsync($"https://videscentrs.lvgmc.lv/data/weather_forecast_for_location_hourly?nosaukums={displayName}");
            response.EnsureSuccessStatusCode();

            var weatherData = await response.Content.ReadAsStringAsync();
            var weather = JsonConvert.DeserializeObject<dynamic>(weatherData);
            var uviData = await responseUVI.Content.ReadAsStringAsync();
            var uvi = JsonConvert.DeserializeObject<dynamic>(uviData);

            var records = weather?.result.records;

            if (records != null)
            {
                foreach (var record in records)
                {
                    if (record.ABBREVIATION == Abbreviations.TempAbbr)
                    {
                        temperature = "Temperature: " + record.VALUE.ToString() + "°C";
                    }
                    else if (record.ABBREVIATION == Abbreviations.HumidityAbbr)
                    {
                        humidity = "Humidity: " + record.VALUE.ToString() + "%";
                    }
                    else if (record.ABBREVIATION == Abbreviations.WindSpeedAbbr)
                    {
                        windSpeed = "Wind Speed: " + record.VALUE.ToString() + "m/s";
                    }
                    else if (record.ABBREVIATION == Abbreviations.WindShearAbbr)
                    {
                        windShear = record.VALUE.ToString() + "m/s";
                    }
                    else if (record.ABBREVIATION == Abbreviations.PrecipitationAbbr)
                    {
                        precipitation = "Precipitation (last hour): " + record.VALUE.ToString() + "mm";
                    }
                }
            }                               

            if (uvi != null)
            {
                foreach (var record in uvi)
                {
                    var recordHour = record["laiks"].ToString().Substring(8, 2);
                    var uviValue = record["uvi_indekss"].ToString();
                    if (uviValue != "null" && recordHour == currentHour)
                    {
                        uviIndex = "UVI: " + uviValue;
                        break;
                    }
                }
            }
        }
        catch (HttpRequestException ex)
        {
            temperature = "Error retrieving weather data: " + ex.Message;
        }
        return (temperature, humidity, windSpeed, windShear, precipitation, uviIndex);
    }    
}

